---

name: Call Another Repo

on:
  push:
    branches:
      - github-actions

jobs:
  get_environment_name_from_git_ref:
    name: Get Environment Name From Git Ref
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setting Environment Name Dynamically
        id: setenv
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/github-actions" || "${{ github.base_ref }}" == "github-actions" ]]; then
            echo "env=poc" >> $GITHUB_OUTPUT


  call-another-repo:
    name: call terraform repo
    runs-on: ubuntu-latest
    needs: get_environment_name_from_git_ref
    environment: ${{ needs.get_environment_name_from_git_ref.outputs.env }}
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v2

      - name: Checkout another repo
        uses: actions/checkout@v2
        with:
          repository: tarunkumarpendem/github-actions.git
          path: ./terraform

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: "Terraform Environment SetUp"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1

      - name: "Terraform init"
        id: init
        run: |
          cd terraform
          terraform init

      - name: "Validate terraform template"
        id: validate
        run: |
          cd terraform
          terraform validate

      - name: "Terraform plan"
        id: plan
        run: |
          cd terraform
          terraform plan

      - name: "Terraform apply"
        id: apply
        run: |
          cd terraform
          terraform apply -auto-approve $planfile